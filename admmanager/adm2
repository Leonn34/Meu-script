#!/bin/bash

if [ $(id -u) -eq 0 ]; then
clear
 else
 if echo $(id) |grep sudo > /dev/null
then
clear
echo "Voce não é root"
echo "Seu usuario esta no grupo sudo"
echo -e "Para virar root execute \033[1;31msudo su\033[0m"
exit
else
clear
echo -e ""
exit
	fi
fi

if [ "$1" = "" ]; then
clear
echo -e "\033[36;37mFERRAMENTAS ADM MANAGER\033[0m" 
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[1;36m[\033[1;31m1\033[1;36m] CRIAR BACKUP \033[1;30m(Backup dos usuarios )\033[1;36m
[\033[1;31m2\033[1;36m] RESTAURAR BACKUP \033[1;30m(Restaura backup)\033[1;36m
[\033[1;31m3\033[1;36m] LIMPAR CACHE \033[1;30m(Limpar cash do sistema)\033[1;36m
[\033[1;31m4\033[1;36m] ALTERAR SENHA \033[1;30m(altera a senha root)\033[1;36m
[\033[1;31m5\033[1;36m] INFORMAÇOES CPU \033[1;30m(Informaçoes sobre a cpu)\033[1;36m
[\033[1;31m6\033[1;36m] STATUS DA REDE \033[1;30m(\033[1;31mCTRL + C\033[1;30m Para Voltar)\033[1;36m
[\033[1;31m7\033[1;36m] ATUALIZAR ADM \033[1;30m(atualiza adm manager e seus scripts)\033[1;36m
[\033[1;31m8\033[1;36m] REMOVER ADM \033[1;30m(REMOVE adm manager e seus scripts)\033[1;36m
[\033[1;31m9\033[1;36m] REMOVER USUARIOS \033[1;30m(REMOVE TODOS USUARIOS)\033[1;36m
[\033[1;31m10\033[1;36m] \033[1;31mMENU HOST S/D \033[1;30m(\033[1;31mFERRAMENTAS PROCURA HOST\033[1;30m)\033[1;36m
[\033[1;31m11\033[1;36m] \033[1;31mMENU ADM3 \033[1;30m(opçoes avançadas de ediçao!)\033[1;36m
[\033[1;31m12\033[1;36m] ADICIONAR/REMOVER PORTAS \033[1;30m(ssh/squid/dropbear)\033[1;36m
[\033[1;31m13\033[1;36m] FAILBAN SQUID PROTECTION \033[1;30m(Proteção Squid!)\033[1;36m
[\033[1;31m14\033[1;36m] TCP SpeeD \033[1;30m(Instalar/desinstalar)\033[1;36m
[\033[1;31m0\033[1;36m] VOLTAR\033[1;30m (Volta ao menu anterior)\033[0m"
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[1;36mQUAL E A SUA OPÇAO?\033[0m"
read -p ": " opcao
else
opcao="$1"
fi
case $opcao in
 1)
clear
echo -e "\033[1;37mFazendo Backup de Usuarios...\033[0m"
for user in `awk -F : '$3 > 900 { print $1 }' /etc/passwd |grep -v "nobody" |grep -vi polkitd |grep -vi systemd-[a-z] |grep -vi systemd-[0-9]`
do
if [ -e /etc/VpsPackdir/senha/$user ]
then
pass=$(cat /etc/VpsPackdir/senha/$user)
else
echo -e "\033[1;31mNão foi possivel ter a senha do usuario\033[1;37m ($user)"
read -p "Digite a Senha Manualmente ou Tecle ENTER: " pass
fi

if [ -e /etc/VpsPackdir/limite/$user ]
then
limite=$(cat /etc/VpsPackdir/limite/$user)
echo "$user:$pass:$limite" >> /etc/VpsPackdir/backup
echo -e "\033[1;37mUser $user Backup [\033[1;31mOK\033[1;37m]\033[0m"
else
echo "$user:$pass" >> /etc/VpsPackdir/backup
echo -e "\033[1;37mUser $user Backup [\033[1;31mOK\033[1;37m]\033[0m"
fi
done
echo " "
echo -e "\033[1;31mBackup Completo !!!\033[0m"
echo " "
echo -e "\033[1;37mAS informações sobre usuarios ficam no arquivo \033[1;31m /etc/VpsPackdir/backup \033[1;37m
Guarde os Para uma futura Restauração\033[0m"
sleep 5s
  adm2
  exit;;
 2)
sleep 1s
echo -n "Digite o diretorio do arquivo Backup: "
read arq
echo -e "\033[1;37mRESTAURANDO...\033[0m"

for user in `cat $arq`
do
usuario=$(echo "$user" |awk -F : '{print $1}')
senha=$(echo "$user" |awk -F : '{print $2}')
if cat /etc/passwd |grep $usuario: 1> /dev/null 2>/dev/null
then
echo " " > /dev/null
else
echo "$user" |cut -d: -f3 1> /dev/null 2>/dev/null
  if [ $? = 0 ]
  then
  limite=$(echo "$user" |awk -F : '{print $3}')
  useradd -M -s /bin/false $usuario
  (echo $senha ; echo $senha) | passwd $usuario > /dev/null 2> /dev/null
  limit $usuario $limite 1> /dev/null 2> /dev/null
  echo "$senha" > /etc/VpsPackdir/senha/$usuario
  else
  useradd -M -s /bin/false $usuario
  (echo $senha ; echo $senha) | passwd $usuario > /dev/null 2> /dev/null
  echo "$senha" > /etc/VpsPackdir/senha/$usuario
  fi
  echo -e "\033[1;37mUsuario: \033[1;31m$usuario \033[1;37mBackup: [\033[1;31mOk\033[1;37m]\033[0m"
fi
adm2
done
  exit;;
 3)
clear
sleep 1s
echo -e "\033[1;33mISSO LIMPARA O CACHE DO SISTEMA, E TAMBEM IRA FAZER UMA LIMPEZA GERAL EM SUA MAQUINA, ELIMINADO COISAS INUTEIS...\033[1;31m
PARA LIMPAR O CACHE DE UM ENTER!\033[0m"
read -p ""
echo -e "\033[1;31mLIMPANDO O CACHE E SWAP...\033[0m"
echo -e "\033[1;31m"
echo 3 > /proc/sys/vm/drop_caches
sysctl -w vm.drop_caches=3 1>/dev/null 2>/dev/null
swapoff -a && swapon -a 1>/dev/null 2>/dev/null
cd /tmp/ && rm -rf *
apt-get clean -y
apt-get autoremove -y
cd /root/
echo -e "\033[1;31mAGUARDE...\033[0m"
echo -e "\033[7;31m\033[7;41m"
for prog in $(seq 10);
do
echo -n "||"
sleep 0.1s
echo -n "|"
sleep 0.1s
done
echo ""
sleep 1s
echo -e "\033[0m\033[1;31m
LIMPO\033[0m"
service ssh restart 1>/dev/null 2>/dev/null
service squid restart 1>/dev/null 2>/dev/null
service squid3 restart 1>/dev/null 2>/dev/null
echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
read -p " "
  adm2
  exit;;
 4)
  clear
echo -e "\033[1;31mATENÇÃO: \033[1;35m Essa senha será usada para entrar no seu servidor
\033[1;31m\033[0m"
echo -e "------------------------------------------------------------"
echo -e "\033[1;31mDIGITE A NOVA SENHA \033[1;35m
para continuar...\033[1;31m \033[1;35m\033[0m"
read  -p ": " pass
(echo $pass; echo $pass)|passwd 2>/dev/null
sleep 1s
echo -e "\033[1;33mSENHA ALTERADA COM SUCESSO!

SUA SENHA AGORA E: \033[1;31m$pass

\033[1;35mRETORNANDO AO PAINEL ADM...\033[0m"
  sleep 7s
  adm2;;
 5)
  clear
echo -e "\033[1;33mVERIFICANDO SISTEMA...\033[0m"
clear
echo -e "\033[1;33m"
sleep 4s
if [ ! /proc/cpuinfo ]
then
echo "Error Getting System Information."
exit 0
fi
if [ ! /etc/issue.net ]
then
echo "Error Getting System Information."
exit 0
fi
if [ ! /proc/meminfo ]
then
echo "Error Getting System Information."
exit 0
fi

system=$(cat /etc/issue.net)
based=$(cat /etc/*release | grep ID_LIKE | awk -F "=" '{print $2}')
processor=$(cat /proc/cpuinfo | grep "model name" | uniq | awk -F ":" '{print $2}')
cpus=$(cat /proc/cpuinfo | grep processor | wc -l)

if [ "$system" ]
then

echo "System: $system"
else
echo "System: Not Available"
fi
if [ "$based" ]
then
echo "Its a $based-like"
else
echo "Based system not Available"
fi
if [ "$processor" ]
then
echo "Processor: $processor x$cpus"
else
echo "Processor: Not Available"
fi
clock=$(lscpu | grep "CPU MHz" | awk '{print $3}')
if [ "$clock" ]
then
echo "Clock: $clock MHz"
else
echo "Clock: Not Available"
fi
echo "$(ps aux  | awk 'BEGIN { sum = 0 }  { sum += sprintf("%f",$3) }; END { printf "CPU Usage: " "%.2f" "%%", sum}')"
totalram=$(free | grep Mem | awk '{print $2}')
usedram=$(free | grep Mem | awk '{print $3}')
freeram=$(free | grep Mem | awk '{print $4}')
swapram=$( cat /proc/meminfo | grep SwapTotal | awk '{print $2}')
echo "RAM TOTAL: $(($totalram / 1024))MB USED: $(($usedram / 1024))MB FREE: $(($freeram / 1024))MB SWAP: $(($swapram / 1024))MB "
echo "Uptime: $(uptime)"
echo "Hostname: $(hostname)"
echo "IP: $(ip addr | grep inet | grep -v inet6 | grep -v "host lo" | awk '{print $2}' | awk -F "/" '{print $1}')"
echo "Kernel Version: $(uname -r)"
echo "Architecture: $(uname -m)"
sleep 3s
  echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
read -p " "
sleep 1s
  echo -e "\033[0m"
  adm2
  exit;;
 6)
  clear
  nload
  sleep 1s
  adm2
  exit;;
 7)
  clear
  instalar
  sleep 1s
  exit;;
 8)
####DESINSTALACAOADM###
echo -e "\033[1;31mDESISNSTALAR ADM?
[s/n]\033[0m"
read -p ": " desist
if [ "$desist" = "s" ]
then
echo -e "\033[1;31mINICIANDO PROCESSO...\033[0m"
sleep 3s
removeradm
sleep 3s
echo -e "\033[1;31mCONCLUIDO
ENTER PARA SAIR!...\033[0m"
read -p " "
exit
fi
#####DESISNTALARADMFIM#####
adm2
exit;;
 9)
  echo -e "\033[1;31mATENCAO ISTO REMOVERA TODOS OS USUARIOS, NAO FUNCIONA COM OPENVPN...\033[0m"
sleep 1s 
echo -e "\033[1;31mTEM CERTEZA? DIGITE 
[s/n] PARA PROSSEGUIR\033[0m"
read -p ": " -e -i s remov
if [ "$remov" = "s" ]
then
for users in `awk -F : '$3 > 900 { print $1 }' /etc/passwd |grep -v "nobody" |grep -vi polkitd |grep -vi system-`
do
userdel $users
done
echo -e "\033[1;31mUSUARIOS REMOVIDOS COM SUCESSO\033[0m"
sleep 4s
else
echo -e "\033[1;31mOPERACAO CANCELADA\033[0m"
  sleep 4s
adm
fi
  exit;;
 10)
  adm4
  sleep 2s
  exit;;
 11)
  adm3
  exit;;
 12)
  addportas
  exit;;
 13)
if [ ! -f "/etc/squid/squid.conf" ]; then
 if [ ! -f "/etc/squid3/squid.conf" ]; then
echo -e "\033[1;31mNão ha nenhum squid instalado\033[0m"
sleep 4s
adm2
exit
 fi
fi
  failban
  adm2
  exit;;
 14)
  TCP
  adm2
  exit;;
 0)
  adm
  exit;;
 *)
  tput setaf 7 ; tput setab 4 ; tput bold ; printf '%44s%s%-20s\n' "OPÇÃO INVÁLIDA..." ; tput sgr0
sleep 1
exit;;
esac